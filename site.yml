---
- name: Ansible lab
  hosts: local
  gather_facts: true

  tasks:
    - name: Install some basic packages defined in variable "packages"
      become: true
      apt :
        name: "{{ item }}"
        cache_valid_time: "{{ aptcachetime }}"
      loop: "{{ packages }}"

    - name: Enable Nginx service, ensure it is not masked and start it
      become: true
      ansible.builtin.systemd:
        name : nginx.service
        state: started
        enabled : yes
        masked: no

    - name: Create {{ app_dir }} directory if it does not exist
      become: true
      ansible.builtin.file:
        path: '{{ app_dir }}'
        state: directory
        owner: '{{ ansible_user_id }}'
        mode: '755'

    - name: Download Java app to {{ app_dir }}/{{ app_file }}
      ansible.builtin.get_url:
        url: "https://storage.googleapis.com/devops-practice-files/systemd/ServicesLab-0.0.1.jar"
        dest: '{{ app_dir }}/{{ app_file }}'
        owner: '{{ ansible_user_id }}'
        mode: '644'

    - name: Create a Java App Unit
      become: true
      notify:
      - Reload Systemd
      ansible.builtin.template:
        src: 'templates/app.service.j2'
        dest : '/etc/systemd/system/sample.service'
        owner: root
        group: root
        mode: '644'

    - name: Enable sample.service, ensure it is not masked and start it
      become: true
      ansible.builtin.systemd:
        name : sample.service
        state: started
        enabled : yes
        masked: no

    - name: Create a Nginx config
      become: true
      ansible.builtin.template:
        src: '{{ playbook_dir }}/templates/nginx.conf.j2'
        dest : '/etc/nginx/nginx.conf'
        owner: root
        group: root
        mode: '644'

    - name: Restart Nginx
      become: true
      ansible.builtin.systemd:
        name: nginx.service
        state: restarted
  
  handlers:
    - name: Reload Systemd
      become: true
      ansible.builtin.systemd:
        daemon-reload: yes